@using ISQuiz.Models.API;
@using ISQuiz.Models.API.Questionnaires;
@using ISQuiz.Models.Enum;
@using ISQuiz.ViewModels;
@model QuestionnaireViewModel
<style>

    .form-container {
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

</style>

<form method="POST" asp-controller="Home" asp-action="DeleteQuestionnaire" id="DeleteQuestionnaireForm">
    <div class="modal-body">
        <div class="col-sm-12">
            <div class="alert alert-danger alert-dismissible fade show mt-1 px-1 mb-0 text-center" role="alert">
                <i class="uil uil-exclamation-octagon d-block display-4 mt-2 mb-3 text-danger"></i>
                <h5 class="text-danger">@Localization.Delete</h5>
                <p>
                    @Localization.Sure
                </p>
                <h2>@Localization.DetailQ</h2>
            </div><div class="form-container">
                <h3 style="margin-top:20px;"><strong>@Localization.TitleQ:</strong> @Model.Title</h3>
                <p><strong>@Localization.Question </strong></p>
                 <ol>
                    @foreach (var question in Model.Questions.OrderBy(x => x.id))
                    {
                        <h5><li>@question.question</li></h5>
                        <p><strong>@Localization.Comment:</strong> @question.comentary</p>

                        string answerLocalization = question.gradingType switch
                        {
                            GradingType.YesNo => Localization.YesorNo,
                            GradingType.Point10Score => Localization.Scorepoints,
                            GradingType.SingleAnswerVariant => Localization.Oneanswer,
                            GradingType.MultipleAnswerVariant => Localization.Multianswer,
                            _ => question.gradingType.ToString()
                        };


                        <p><strong>@Localization.GradingType:</strong> @answerLocalization</p>
                        
                        @if (question.gradingType == GradingType.SingleAnswerVariant || question.gradingType == GradingType.MultipleAnswerVariant)
                        {
                            <b>@Localization.Responses</b>
                            <br/>
                            <ul>
                                @foreach (var answer in question.responseVariants)
                                {
                                    <li><p>@answer.response</p></li>

                                }
                            </ul>
                        }
                        <br />
                        
                    }
                </ol> 

            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-danger waves-effect waves-light"> @Localization.Delete</button>
        <button type="button" class="btn btn-light waves-effect" data-bs-dismiss="modal">@Localization.Cancel</button>

    </div>
</form>

<script>
    $(document).ready(function () {
        $('#DeleteQuestionnaireForm').on('submit', function (e) {
            e.preventDefault();


            $.ajax({
                url: '../Home/DeleteQuestionnaire',
                cache: false,
                type: "POST",
                data: JSON.stringify(@Model.oid),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.statusCode === 200) {
                        $('.modal').modal('hide');
                        window.location.reload();

                    } else {
                        var errorMessage = $('<div class="alert alert-danger" role="alert">' + data.message + '</div>');
                        $('#DeleteQuestionnaireForm').append(errorMessage);
                    }
                },

            });
        });
    });
</script>