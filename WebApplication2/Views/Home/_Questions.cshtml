@using WebApplication2.Models.API.Questionnaires;
@using WebApplication2.Models.Enum;
@model DetailQuestions

<div id="questions-container">
    @{
        int i = 1;
    }
    @foreach (var item in Model.questions.OrderBy(x => x.id))
    {
        <div class="question" id="questionN_@i">

            <div class="pencil">
                <i class="fas fa-pencil-alt btn btn-primary waves-effect waves-light" onclick="EditQuestion(@i)"></i>
            </div>

            <div class="form-group">
                <input hidden id="QuestionId" value="@item.id" />
                <h4><i class="uil-eye font-size-24" onclick="DetailMore(@i)" style="cursor: pointer;"></i> @Localization.QuestionText</h4>
                <h3 id="questionTitle_@i"><strong>@item.question</strong></h3>
            </div>

            <div id="detail_@i">
                <div class="form-group">
                    @{
                        string answerLocalization = "";
                        int convertToIntGradingType = 0;
                        switch (item.gradingType)
                        {
                            case GradingType.YesNo:
                                {
                                    answerLocalization = Localization.YesorNo;
                                    convertToIntGradingType = 1;
                                    break;
                                }
                            case GradingType.Point10Score:
                                {
                                    answerLocalization = Localization.Scorepoints;
                                    convertToIntGradingType = 2;
                                    break;
                                }
                            case GradingType.SingleAnswerVariant:
                                {
                                    answerLocalization = Localization.Oneanswer;
                                    convertToIntGradingType = 3;
                                    break;
                                }
                            case GradingType.MultipleAnswerVariant:
                                {
                                    answerLocalization = Localization.Multianswer;
                                    convertToIntGradingType = 4;
                                    break;
                                }
                            default:
                                answerLocalization = item.gradingType.ToString(); break;
                        }
                    }
                    <input hidden id="questionGradingType_@i" value="@convertToIntGradingType" />
                    <label asp-for="@item.gradingType">@Localization.GradingType</label>
                    <b>@answerLocalization</b>
                </div>

                <div class="form-group">
                    <label asp-for="@item.comentary">@Localization.Comment</label>
                    <p id="questionComentary_@i"><b>@item.comentary</b></p>
                </div>


                <div class="answers-container" id="answersContainer_@i">
                    @{
                        int j = 0;
                    }
                    @if (item.gradingType == GradingType.SingleAnswerVariant || item.gradingType == GradingType.MultipleAnswerVariant)
                    {
                        <h4>@Localization.Responses</h4>
                        <br/>

                            foreach (var answ in item.responseVariants)
                            {
                                <div class="answer" id="response_@j">
                                    <div class="form-group">
                                        <div class="row">
                                            @* <p>@Localization.AnswerText</p> *@
                                            <b>@answ.response</b>
                                        </div>
                                    </div>
                                </div>

                                j++;
                            }
                        
                    }
                </div>
            </div>
        </div>
        i++;
    }

</div>