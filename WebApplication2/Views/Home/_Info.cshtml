@using WebApplication2.Models.API;
@using WebApplication2.Models.Enum;
@using WebApplication2.ViewModels;
@using Newtonsoft.Json
@model QuestionnaireViewModel


<style>
    body {
        font-size: 16px; /* Исходный размер шрифта */
    }

    .form-group {
        margin-bottom: 20px;
    }

    .question {
        border: 1px solid #2c3036;
        border-radius: 10px;
        padding: 10px;
        margin: 40px 0;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        position: relative;
    }

    .btn-remove {
        display: none;
    }

    .pencil {
        position: absolute;
        top: 15px;
        right: 20px; /* Расположение карандаша справа от div */
        display: none; /* Скрыть карандаш изначально */
    }

    .question:hover .pencil {
        display: block; /* Показать карандаш при наведении на div */
    }
</style>

<script>
    function DetailMore(index) {
        var detailId = "#detail_" + index;

        // Анимированно скрываем или отображаем детали
        $(detailId).animate({
            height: 'toggle'
        });
    }

    function EditQuestion(index) {
        var container = $("#questionN_" + index);

        var detailHide = container.find("#detail_" + index);
        detailHide.animate({
            height: 'show'
        });

        var titleElement = container.find("#questionTitle_" + index);
        var comentaryElement = container.find("#questionComentary_" + index);
        var gradingTypeElement = container.find("#questionGradingType_" + index);


        // Создаем input для редактирования
        var titleInput = $("<input type='text' class='form-control' value='" + titleElement.text() + "' />");
        var comentaryInput = $("<input type='text' class='form-control' value='" + comentaryElement.text() + "' />");
        var gradingTypeValue = gradingTypeElement[0].value;


        // Заменяем на input
        titleElement.replaceWith(titleInput);
        comentaryElement.replaceWith(comentaryInput);

        if (gradingTypeValue == '3' || gradingTypeValue == '4') {
            // Создаем кнопку
            var addButton = $("<button type='button' id='add-answer' style='width: 100%; margin-top: 10px;' class='btn btn-info waves-effect waves-light'><i class='mdi mdi-plus me-1'></i>@Localization.AddAnswer</button>");


            // Обработчик события для кнопки (если необходимо)
            addButton.on("click", function () {
                // Ваш код обработки события при нажатии на кнопку

                var newInput = `<div class="answer">
                                                    <div class="form-group">
                                                    <div class="row">
                                    <div class="col-md-10">
                                        <p>@Localization.AnswerText</p>
                                        <input type="text" class="form-control mb-4" required />
                                    </div>
                                    <div class="col-md-2">
                                        <button type='button' id='btnremoveAnsw' style="width: 100%;  margin-top:6px;" class='btn btn-danger waves-effect waves-light'><i class="uil-trash-alt"></i> @Localization.Delete</button>
                                    </div>
                                    </div>
                                    </div>
                                </div>`;

                // Вставляем новый input перед кнопкой
                container.find("#answersContainer_" + index).append(newInput);
            });

            // Добавляем кнопку в форму
            container.append(addButton);
        }


        // Заменяем кнопку Edit на Save
        var saveButton = $("<a style='margin-top: 10px; width: 100%;' class='btn btn-success waves-effect waves-light save' title='Save'><i class='uil uil-file-alt me-1' ></i>@Localization.Save</a>").on("click", function () {
            container.find(".pencil").show();

            var updatedTitle = titleInput.val();
            var updateComentary = comentaryInput.val();

            titleInput.replaceWith(`<h3 id="questionTitle_${index}"><strong>` + updatedTitle + `</strong></h3>`);
            comentaryInput.replaceWith(`<p id="questionComentary_${index}"><b>` + updateComentary + "</b></p>");

            container.find(".save").hide();
            container.find("#add-answer").remove();


            if (updatedTitle.trim() === "") {
                alert("Пожалуйста, введите непустое сообщение.");
                return;
            }
            //debugger
        });
        // Добавляем текущую кнопку вызова редактирования в конец контейнера
        container.append(saveButton);
        // Убираем текущую кнопку Edit
        container.find(".pencil").hide();
    }



</script>


<div class="form-container">
    <div class="row">
        <div class="col-lg-12">

            <input type="hidden" asp-for="oid" id="mainId" />

            <br />

            <div class="row">
                <div class="col-md-11">
                    <div class="mb-4">
                        <h1 class="text-center">@Model.Title</h1>
                    </div>
                </div>
                <div class="col-md-1">
                    <a class="btn btn-secondary waves-effect waves-light edit" title="Edit">
                        <i class="fas fa-pencil-alt font-size-18"></i>
                    </a>
                </div>
            </div>


            <h3>@Localization.Question</h3>
            <span>
                <button type="button" id="hideAll" class="btn btn-primary btn-rounded waves-effect waves-light">@Localization.HideAll (@Model.Questions.Count)</button>
                <button type="button" id="showAll" class="btn btn-primary btn-rounded waves-effect waves-light">@Localization.ShowAll (@Model.Questions.Count)</button>
            </span>


            <br />
            <div id="questions-container">
                @{
                    int i = 0;
                }
                @foreach (var item in Model.Questions.OrderBy(x => x.id))
                {
                    <div class="question" id="questionN_@i">

                        <div class="pencil"><i class="fas fa-pencil-alt font-size-18" onclick="EditQuestion(@i)"></i></div>

                        <div class="form-group">
                            <h4><i class="uil-eye font-size-24" onclick="DetailMore(@i)" style="cursor: pointer;"></i> @Localization.QuestionText</h4>
                            <h3 id="questionTitle_@i"><strong>@item.question</strong></h3>
                        </div>

                        <div id="detail_@i">
                            <div class="form-group">
                                @{
                                    string answerLocalization = "";
                                    int convertToIntGradingType = 0;
                                    switch (item.gradingType)
                                    {
                                        case GradingType.YesNo:
                                            {
                                                answerLocalization = Localization.YesorNo;
                                                convertToIntGradingType = 1;
                                                break;
                                            }
                                        case GradingType.Point10Score:
                                            {
                                                answerLocalization = Localization.Scorepoints;
                                                convertToIntGradingType = 2;
                                                break;
                                            }
                                        case GradingType.SingleAnswerVariant:
                                            {
                                                answerLocalization = Localization.Oneanswer;
                                                convertToIntGradingType = 3;
                                                break;
                                            }
                                        case GradingType.MultipleAnswerVariant:
                                            {
                                                answerLocalization = Localization.Multianswer;
                                                convertToIntGradingType = 4;
                                                break;
                                            }
                                        default:
                                            answerLocalization = item.gradingType.ToString(); break;
                                    }
                                }
                                <input hidden id="questionGradingType_@i" value="@convertToIntGradingType" />
                                <label asp-for="@item.gradingType">@Localization.GradingType</label>
                                <b>@answerLocalization</b>
                            </div>

                            <div class="form-group">
                                <label asp-for="@item.comentary">@Localization.Comment</label>
                                <p id="questionComentary_@i"><b>@item.comentary</b></p>
                            </div>


                            <div class="answers-container" id="answersContainer_@i">
                                @{
                                    int j = 0;
                                }
                                @if (item.gradingType == GradingType.SingleAnswerVariant || item.gradingType == GradingType.MultipleAnswerVariant)
                                {
                                    <h4>@Localization.Responses</h4>
                                    if (item.responseVariants != null)
                                    {
                                        foreach (var answ in item.responseVariants)
                                        {
                                            <div class="answer" id="response_@j">
                                                <div class="form-group">
                                                    <div class="row">
                                                        <p>@Localization.AnswerText</p>
                                                        <b>@answ.response</b>
                                                    </div>
                                                </div>
                                            </div>

                                            j++;
                                        }
                                    }
                                    <div class="answer" id="response_1">
                                        <div class="form-group">
                                            <div class="row">
                                                <p>@Localization.AnswerText</p>
                                                <b>Test21231</b>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    i++;
                }
            </div>
            <div class="row">
                <div id="editBtn" class="col-lg-9">
                    <a style="margin-top: 10px; width: 100%;" class="btn btn-primary waves-effect waves-light" href="@Url.Action("Upsert", "Home", new {id = Model.oid})">@Localization.EditQ</a>
                </div>
                <div id="cancelBtn" class="col-lg-3">
                    <a type="button" href="/" style="margin-top: 10px; width: 100%;" class="btn btn-secondary btn-soft-secondary waves-effect waves-light">@Localization.Cancel</a>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        // Обработчик события для кнопки Edit
        $(document).on("click", ".edit", function () {
            var container = $(this).closest(".row");
            var titleElement = container.find("h1");

            // Создаем input для редактирования
            var titleInput = $("<input type='text' class='form-control' id='defaultconfig' value='" + titleElement.text() + "' />");

            // Заменяем h1 на input
            titleElement.replaceWith(titleInput);

            // Заменяем кнопку Edit на Save
            var saveButton = $("<a class='btn btn-secondary  waves-effect waves-light save' title='Save'><i class='fas fa-save font-size-18'></i></a>").on("click", function () {
                var updatedTitle = titleInput.val();

                if (updatedTitle.trim() === "") {
                    alert("Пожалуйста, введите непустое сообщение.");
                    return;
                }

                var Quest = {
                    oid: $('#mainId').val(),
                    name: $('#defaultconfig').val(),
                };
                //debugger
                $.ajax({
                    url: '/Home/UpsertQuestionnaire',
                    cache: false,
                    type: "POST",
                    data: JSON.stringify(Quest),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.statusCode === 200) {
                            // Заменяем input на h3
                            titleInput.replaceWith("<h1 class='text-center'>" + updatedTitle + "</h1>");

                            // Заменяем кнопку Save на Edit
                            saveButton.replaceWith("<a class='btn btn-secondary  waves-effect waves-light edit' title='Edit'><i class='fas fa-pencil-alt font-size-18'></i></a>");
                        } else {

                        }
                    },

                });

            });

            $(this).replaceWith(saveButton);
        });


        /* $("i[id^='Titlequestion_']").click(function () {
             debugger
             var questionId = $(this).attr('id');
             var detailId = "#detail_" + questionId.split('_')[1];

             // Анимированно скрываем или отображаем детали
             $(detailId).animate({
                 height: 'toggle'
             });
         });
         */
        $("#hideAll").click(function () {
            $("[id^='detail_']").animate({
                height: 'hide'
            });
        });

        $("#showAll").click(function () {
            $("[id^='detail_']").animate({
                height: 'show'
            });
        });


    });

</script>